<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <!-- Inherit from parent project -->
    <parent>
        <groupId>dev.dong4j</groupId>
        <artifactId>arco-project-dependencies</artifactId>
        <version>${revision}</version>
        <relativePath>../arco-project-dependencies/pom.xml</relativePath>
    </parent>

    <!-- Project coordinates -->
    <artifactId>arco-project-builder</artifactId>
    <packaging>pom</packaging>

    <!-- Project metadata -->
    <name>Arco Project Builder</name>
    <description>框架级的依赖管理, 分为项目型和框架组件型</description>

    <!-- Project modules -->
    <modules>
        <!-- 项目型父依赖 -->
        <module>../arco-business-parent</module>
        <!-- 组件型父依赖 -->
        <module>../arco-component-parent</module>
    </modules>

    <!-- Project properties -->
    <properties>
        <global.version>0.0.1-SNAPSHOT</global.version>
        <arco-processor.version>${global.version}</arco-processor.version>
        <arco-maven-plugin.version>${global.version}</arco-maven-plugin.version>
        <blen-dependencies.version>${global.version}</blen-dependencies.version>
        <cubo-dependencies.version>${global.version}</cubo-dependencies.version>
        <!-- 业务端可覆写此配置 -->

        <git-commit-id-plugin.version>2.2.6</git-commit-id-plugin.version>
        <jacoco-maven-plugin.version>0.8.3</jacoco-maven-plugin.version>
        <maven-enforcer-plugin.version>3.0.0-M3</maven-enforcer-plugin.version>

        <maven-antrun-plugin.version>3.0.0</maven-antrun-plugin.version>
        <maven-checkstyle-plugin.version>3.1.1</maven-checkstyle-plugin.version>
        <maven-pmd-plugin.version>3.13.0</maven-pmd-plugin.version>

        <mapstruct.version>1.4.2.Final</mapstruct.version>
        <lombok-mapstruct-binding.version>0.2.0</lombok-mapstruct-binding.version>
        <p3c-pmd.version>2.0.1</p3c-pmd.version>

    </properties>

    <dependencies>
        <!-- lombok 插件, 简化代码 (在 package 阶段排除) -->
        <!-- <dependency> -->
        <!--     <groupId>org.projectlombok</groupId> -->
        <!--     <artifactId>lombok</artifactId> -->
        <!--     &lt;!&ndash; 使用 arco-supreme 中的版本, 如果不加 version 将使用 spring-boot-dependencies 的依赖版本 &ndash;&gt; -->
        <!--     <version>${lombok.version}</version> -->
        <!--     <scope>provided</scope> -->
        <!-- </dependency> -->
        <!-- idea 提供的用于编译时检查 null 的工具包 (在 package 阶段排除) -->
        <dependency>
            <groupId>org.jetbrains</groupId>
            <artifactId>annotations</artifactId>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>dev.dong4j</groupId>
                <artifactId>arco-assist-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
            </plugin>
        </plugins>

        <!-- 插件依赖定义及配置 -->
        <pluginManagement>
            <plugins>
                <!--region git-commit-id-plugin-->
                <!-- 用于生成 git.properties -->
                <plugin>
                    <groupId>pl.project13.maven</groupId>
                    <artifactId>git-commit-id-plugin</artifactId>
                    <version>${git-commit-id-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>get-the-git-infos</id>
                            <goals>
                                <goal>revision</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>validate-the-git-infos</id>
                            <goals>
                                <goal>validateRevision</goal>
                            </goals>
                            <phase>package</phase>
                        </execution>
                    </executions>
                    <configuration>
                        <!-- https://github.com/git-commit-id/maven-git-commit-id-plugin/issues/315 -Dmaven.gitcommitid.skip=true -->
                        <skip>false</skip>
                        <!-- 使 properties 扩展到整个maven bulid 周期
                        Ref: https://github.com/ktoso/maven-git-commit-id-plugin/issues/280 -->
                        <injectAllReactorProjects>true</injectAllReactorProjects>
                        <dateFormat>yyyy.MM.dd HH:mm:ss</dateFormat>
                        <verbose>true</verbose>
                        <!-- 是否生成 git.properties 属性文件 -->
                        <generateGitPropertiesFile>true</generateGitPropertiesFile>
                        <generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties</generateGitPropertiesFilename>
                        <!-- 不是 git 项目时, 不失败 -->
                        <failOnNoGitDirectory>false</failOnNoGitDirectory>
                        <commitIdGenerationMode>full</commitIdGenerationMode>
                        <!--git描述配置,可选;由JGit提供实现;-->
                        <gitDescribe>
                            <skip>false</skip>
                            <!--提交操作未发现tag时,仅打印提交操作ID,-->
                            <always>false</always>
                            <!--提交操作ID显式字符长度,最大值为:40;默认值:7; 0代表特殊意义; -->
                            <abbrev>7</abbrev>
                            <!--构建触发时,代码有修改时(即"dirty state"),添加指定后缀;默认值:"";-->
                            <dirty>-dirty</dirty>
                            <!--
                                always print using the "tag-commits_from_tag-g_commit_id-maybe_dirty" format, even if "on" a tag.
                                The distance will always be 0 if you're "on" the tag.
                            -->
                            <forceLongFormat>false</forceLongFormat>
                            <tags>true</tags>
                        </gitDescribe>
                    </configuration>
                </plugin>
                <!--endregion-->

                <!--region maven-compiler-plugin 重写 arco-supreme 配置 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <!-- http://maven.apache.org/plugins/maven-compiler-plugin/compile-mojo.html -->
                        <compilerArgs>
                            <arg>-Xlint:all,-classfile,-rawtypes,-unchecked,-deprecation,-processing</arg>
                        </compilerArgs>
                        <encoding>${project.encoding}</encoding>
                        <parameters>true</parameters>
                        <showDeprecation>true</showDeprecation>
                        <showWarnings>true</showWarnings>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <!-- See https://maven.apache.org/plugins/maven-compiler-plugin/compile-mojo.html -->
                        <!-- Classpath elements to supply as annotation processor path. If specified, the compiler   -->
                        <!-- will detect annotation processors only in those classpath elements. If omitted, the     -->
                        <!-- default classpath is used to detect annotation processors. The detection itself depends -->
                        <!-- on the configuration of annotationProcessors.                                           -->
                        <!--                                                                                         -->
                        <!-- According to this documentation, the provided dependency processor is not considered!   -->
                        <!-- https://github.com/mapstruct/mapstruct/issues/2338 -->
                        <!-- https://juejin.cn/post/7099874296373182478 -->
                        <annotationProcessorPaths>
                            <path>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok</artifactId>
                                <version>${lombok.version}</version>
                            </path>
                            <!-- mapstruct 注解处理器 (在 package 阶段排除) -->
                            <path>
                                <groupId>org.mapstruct</groupId>
                                <artifactId>mapstruct-processor</artifactId>
                                <version>${mapstruct.version}</version>
                            </path>
                            <!-- 生成元数据依赖, 用于生成 spring.factories, 打包配置文件, 处理指定的 annotation. (在 package 阶段排除) -->
                            <groupId>dev.dong4j</groupId>
                            <artifactId>arco-processor-core</artifactId>
                            <version>${arco-processor.version}</version>
                            <!-- lombok 1.18.16之后，添加path，必须使用 lombok-mapstruct-binding 插件 -->
                            <path>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok-mapstruct-binding</artifactId>
                                <version>${lombok-mapstruct-binding.version}</version>
                            </path>
                        </annotationProcessorPaths>
                    </configuration>
                    <inherited>true</inherited>
                </plugin>
                <!--endregion-->

                <!--region arco-assist-maven-plugin-->
                <plugin>
                    <groupId>dev.dong4j</groupId>
                    <artifactId>arco-assist-maven-plugin</artifactId>
                    <version>${arco-maven-plugin.version}</version>
                    <executions>
                        <!-- 在 validate 阶段根据当前模块类型禁用部分插件 mojo.dev.dong4j.zeka.maven.plugin.helper.SkipPluginMojo -->
                        <execution>
                            <id>skip-plugin</id>
                            <goals>
                                <goal>skip-plugin</goal>
                            </goals>
                        </execution>
                        <!-- 更友好的时间戳 mojo.dev.dong4j.zeka.maven.plugin.helper.TimestampPropertyMojo -->
                        <execution>
                            <id>timestamp-property</id>
                            <goals>
                                <goal>timestamp-property</goal>
                            </goals>
                            <configuration>
                                <!-- 可注入到环境变量的时间戳 key -->
                                <name>current.time</name>
                                <pattern>MMddHHmm</pattern>
                                <timeZone>GMT+8</timeZone>
                                <locale>zh,CN</locale>
                            </configuration>
                        </execution>
                        <!-- 部署模块配置处理(编译时扫描并找到启动类, 自动注入到 start.class 环境变量中) mojo.dev.dong4j.zeka.maven.plugin.helper.StarterMainClassPropertyMojo -->
                        <execution>
                            <id>mainclass-property</id>
                            <goals>
                                <goal>mainclass-property</goal>
                            </goals>
                            <configuration>
                                <!-- 可注入到环境变量的时间戳 key -->
                                <name>start.class</name>
                            </configuration>
                        </execution>
                        <!-- 用于生成 build-info.properties mojo.dev.dong4j.zeka.maven.plugin.helper.GenerateProjectBuildInfoMojo -->
                        <execution>
                            <goals>
                                <goal>generate-build-info</goal>
                            </goals>
                            <configuration>
                                <additionalProperties>
                                    <encoding.source>${project.encoding}</encoding.source>
                                    <encoding.reporting>${project.encoding}</encoding.reporting>
                                    <project.name>${project.build.finalName}</project.name>
                                    <user.name>${user.name}</user.name>
                                    <compiler.source.jdk>${java.version}</compiler.source.jdk>
                                    <compiler.target.jdk>${java.version}</compiler.target.jdk>
                                </additionalProperties>
                            </configuration>
                        </execution>
                        <!-- 注入 profile.active 变量 (local) mojo.dev.dong4j.zeka.maven.plugin.helper.SpringProfilesActivePropertyMojo -->
                        <execution>
                            <id>profile-active-property</id>
                            <goals>
                                <goal>profile-active-property</goal>
                            </goals>
                        </execution>
                        <!-- 动态生成 assembly.xml mojo.dev.dong4j.zeka.maven.plugin.helper.GenerateAssemblyConfigFileMojo -->
                        <execution>
                            <id>generate-assembly-config</id>
                            <goals>
                                <goal>generate-assembly-config</goal>
                            </goals>
                        </execution>
                        <!-- 删除 checkstyle pmd 等临时文件 mojo.dev.dong4j.zeka.maven.plugin.helper.DeleteTempFileMojo -->
                        <execution>
                            <id>delete-temp-file</id>
                            <goals>
                                <goal>delete-temp-file</goal>
                            </goals>
                        </execution>
                        <!-- 正常编译之后生成一个标识文件 mojo.dev.dong4j.zeka.maven.plugin.helper.CompiledProcessorMojo -->
                        <execution>
                            <id>generate-compiled-id</id>
                            <goals>
                                <goal>generate-compiled-id</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!--endregion-->

                <!--region maven-checkstyle-plugin-->
                <!-- http://maven.apache.org/plugins/maven-checkstyle-plugin/index.html -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <version>${maven-checkstyle-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>checkstyle-validation</id>
                            <phase>validate</phase>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <logViolationsToConsole>true</logViolationsToConsole>
                        <configLocation>zeka-stack-checks.xml</configLocation>
                        <suppressionsLocation>suppressions.xml</suppressionsLocation>
                        <suppressionsFileExpression>checkstyle.suppressions.file</suppressionsFileExpression>
                        <encoding>${project.build.sourceEncoding}</encoding>
                        <consoleOutput>true</consoleOutput>
                        <failOnViolation>true</failOnViolation>
                        <cacheFile>${project.build.directory}/checkstyle/checkstyle-cachefile</cacheFile>
                        <outputFile>${project.build.directory}/checkstyle/checkstyle-result.xml</outputFile>
                        <rulesFiles>${project.build.directory}/checkstyle/checkstyle-rules.xml</rulesFiles>
                        <linkXRef>false</linkXRef>
                        <includes>dev/dong4j\/**\/*.java</includes>
                        <includeResources>false</includeResources>
                        <includeTestResources>false</includeTestResources>
                        <includeTestSourceDirectory>false</includeTestSourceDirectory>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>dev.dong4j</groupId>
                            <artifactId>arco-checkstyle-plugin-rule</artifactId>
                            <version>${arco-maven-plugin.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <!--endregion-->

                <!--region maven-pmd-plugin-->
                <!-- http://maven.apache.org/plugins/maven-pmd-plugin/index.html -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-pmd-plugin</artifactId>
                    <version>${maven-pmd-plugin.version}</version>
                    <configuration>
                        <!-- 在父项目中聚合 -->
                        <!--<aggregate>true</aggregate>-->
                        <skipEmptyReport>true</skipEmptyReport>
                        <rulesets>
                            <ruleset>rulesets/zeka-stack-comment.xml</ruleset>
                            <ruleset>rulesets/zeka-stack-concurrent.xml</ruleset>
                            <ruleset>rulesets/zeka-stack-constant.xml</ruleset>
                            <ruleset>rulesets/zeka-stack-exception.xml</ruleset>
                            <ruleset>rulesets/zeka-stack-flowcontrol.xml</ruleset>
                            <ruleset>rulesets/zeka-stack-naming.xml</ruleset>
                            <ruleset>rulesets/zeka-stack-oop.xml</ruleset>
                            <ruleset>rulesets/zeka-stack-orm.xml</ruleset>
                            <ruleset>rulesets/zeka-stack-other.xml</ruleset>
                            <ruleset>rulesets/zeka-stack-set.xml</ruleset>
                        </rulesets>
                        <printFailingErrors>true</printFailingErrors>
                        <sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
                        <targetJdk>${java.version}</targetJdk>
                        <linkXRef>false</linkXRef>
                        <verbose>true</verbose>
                        <includes>dev/dong4j\/**\/*.java</includes>
                    </configuration>
                    <executions>
                        <!-- 绑定 pmd:check 到 verify 生命周期 -->
                        <execution>
                            <id>validate</id>
                            <phase>validate</phase>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                        <!-- 绑定 pmd:pmd 到 site 生命周期 -->
                        <execution>
                            <id>pmd-pmd-site</id>
                            <phase>site</phase>
                            <goals>
                                <goal>pmd</goal>
                            </goals>
                        </execution>
                    </executions>

                    <dependencies>
                        <!-- 需要使用阿里的一些xml文件, 因此需要这里增加p3c的依赖 -->
                        <dependency>
                            <groupId>com.alibaba.p3c</groupId>
                            <artifactId>p3c-pmd</artifactId>
                            <version>${p3c-pmd.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>dev.dong4j</groupId>
                            <artifactId>arco-pmd-plugin-rule</artifactId>
                            <version>${arco-maven-plugin.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <!--endregion-->

                <!--region maven-enforcer-plugin-->
                <!-- 依赖冲突提示 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>${maven-enforcer-plugin.version}</version>
                    <dependencies>
                        <dependency>
                            <groupId>dev.dong4j</groupId>
                            <artifactId>arco-enforcer-plugin-rule</artifactId>
                            <version>${arco-maven-plugin.version}</version>
                        </dependency>
                    </dependencies>
                    <executions>
                        <execution>
                            <configuration>
                                <fail>false</fail>
                                <rules>
                                    <dependencyConvergence/>
                                    <zekaEcforcerRule implementation="dev.dong4j.zeka.maven.plugin.enforcer.rule.ZekaEcforcerRule">
                                        <shouldIfail>true</shouldIfail>
                                    </zekaEcforcerRule>
                                </rules>
                            </configuration>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                            <id>enforce-versions</id>
                        </execution>
                    </executions>
                </plugin>
                <!--endregion-->

                <!--region maven-antrun-plugin-->
                <!-- 自定义 ant 任务 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>${maven-antrun-plugin.version}</version>
                    <executions>
                        <execution>
                            <configuration>
                                <target>
                                    <!--suppress UnresolvedMavenProperty -->
                                    <echo>Git-Infos: ${git.commit.id}</echo>
                                </target>
                            </configuration>
                            <goals>
                                <goal>run</goal>
                            </goals>
                            <phase>package</phase>
                        </execution>
                    </executions>
                </plugin>
                <!--endregion-->

                <!--region jacoco-maven-plugin-->
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                            <id>jacoco-initialize</id>
                        </execution>
                        <execution>
                            <goals>
                                <goal>report</goal>
                            </goals>
                            <id>jacoco-site</id>
                            <phase>test</phase>
                        </execution>
                    </executions>
                </plugin>
                <!--endregion-->
            </plugins>
        </pluginManagement>
    </build>
</project>
